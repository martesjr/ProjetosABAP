*&---------------------------------------------------------------------*
*& Report ZR0018
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT zr0018.

*Tipos
TYPES: BEGIN OF ty_file,
         forne LIKE zt0004-forne,
         denom LIKE zt0004-denom,
         ender LIKE zt0004-ender,
         telef LIKE zt0004-telef,
         email LIKE zt0004-email,
         cnpj  LIKE zt0004-cnpj,
       END OF ty_file.


*Tabelas interna
DATA: ti_file TYPE STANDARD TABLE OF ty_file.
DATA: ti_bdcdata TYPE STANDARD TABLE OF bdcdata.


*Workarea
DATA: wa_file TYPE ty_file.
DATA: wa_bdcdata TYPE bdcdata.


*Tela de seleção
SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE TEXT-001.

PARAMETERS p_file TYPE localfile.

SELECTION-SCREEN END OF BLOCK b1.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_file. "Função para inserir o match code e poder selecionar o arquivo de carga de dados.
  PERFORM selecionar_arquivo.


START-OF-SELECTION.

  PERFORM f_upload_file.
  PERFORM f_montar_bdc.
*&---------------------------------------------------------------------*
*& Form SELECIONAR_ARQUIVO
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM selecionar_arquivo .

  CALL FUNCTION 'KD_GET_FILENAME_ON_F4'
    EXPORTING
*     PROGRAM_NAME  = SYST-REPID
*     DYNPRO_NUMBER = SYST-DYNNR
      field_name    = p_file
*     STATIC        = ' '
*     MASK          = ' '
*     FILEOPERATION = 'R'
*     PATH          =
    CHANGING
      file_name     = p_file
*     LOCATION_FLAG = 'P'
    EXCEPTIONS
      mask_too_long = 1
      OTHERS        = 2.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*& Form F_UPLOAD_FILE
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM f_upload_file .

  DATA: vl_file TYPE string.

  vl_file = p_file.





  CALL FUNCTION 'GUI_UPLOAD'
    EXPORTING
      filename                = vl_file
*     FILETYPE                = 'ASC'
*     HAS_FIELD_SEPARATOR     = ' '
*     HEADER_LENGTH           = 0
*     READ_BY_LINE            = 'X'
*     DAT_MODE                = ' '
*     CODEPAGE                = ' '
*     IGNORE_CERR             = ABAP_TRUE
*     REPLACEMENT             = '#'
*     CHECK_BOM               = ' '
*     VIRUS_SCAN_PROFILE      =
*     NO_AUTH_CHECK           = ' '
* IMPORTING
*     FILELENGTH              =
*     HEADER                  =
    TABLES
      data_tab                = ti_file
* CHANGING
*     ISSCANPERFORMED         = ' '
    EXCEPTIONS
      file_open_error         = 1
      file_read_error         = 2
      no_batch                = 3
      gui_refuse_filetransfer = 4
      invalid_type            = 5
      no_authority            = 6
      unknown_error           = 7
      bad_data_format         = 8
      header_not_allowed      = 9
      separator_not_allowed   = 10
      header_too_long         = 11
      unknown_dp_error        = 12
      access_denied           = 13
      dp_out_of_memory        = 14
      disk_full               = 15
      dp_timeout              = 16
      OTHERS                  = 17.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*& Form F_MONTAR_BDC
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM f_montar_bdc .

  PERFORM p_abrir_pasta.


  LOOP AT ti_file INTO wa_file.
    PERFORM f_montar_tela USING 'SAPLZTABELAS'  '0004'.
    PERFORM f_montar_dados USING 'BDC_CURSOR'   'ZT0004-DENOM(01)'.
    PERFORM f_montar_dados USING 'BDC_OKCODE'   '=NEWL'.

    PERFORM f_montar_tela USING 'SAPLZTABELAS'  '0005'.

    PERFORM f_montar_dados USING 'BDC_CURSOR'   'ZT0004-CNPJ'.
    PERFORM f_montar_dados USING 'BDC_OKCODE'   '=SAVE'.
    PERFORM f_montar_dados USING 'ZT0004-FORNE' wa_file-forne.
    PERFORM f_montar_dados USING 'ZT0004-DENOM' wa_file-denom.
    PERFORM f_montar_dados USING 'ZT0004-ENDER' wa_file-ender.
    PERFORM f_montar_dados USING 'ZT0004-TELEF' wa_file-telef.
    PERFORM f_montar_dados USING 'ZT0004-EMAIL' wa_file-email.
    PERFORM f_montar_dados USING 'ZT0004-CNPJ'  wa_file-cnpj.

    PERFORM f_montar_tela USING 'SAPLZTABELAS' '0005'.

    PERFORM f_montar_dados USING 'BDC_CURSOR'   'ZT0004-DENOM'.
    PERFORM f_montar_dados USING 'BDC_OKCODE'   '=ENDE'.

    PERFORM f_inserir_bdc.

  ENDLOOP.

  PERFORM f_fechar_pasta.


ENDFORM.
*&---------------------------------------------------------------------*
*& Form F_MONTAR_TELA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> P_
*&      --> P_
*&---------------------------------------------------------------------*
FORM f_montar_tela  USING    p_program
                             p_screen.

  CLEAR wa_bdcdata.

  wa_bdcdata-program = p_program.
  wa_bdcdata-dynpro = p_screen.
  wa_bdcdata-dynbegin = 'X'.

  APPEND wa_bdcdata TO ti_bdcdata.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form F_MONTAR_DADOS
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> P_
*&      --> P_
*&---------------------------------------------------------------------*
FORM f_montar_dados  USING    p_name
                              p_value.

  CLEAR wa_bdcdata.
  wa_bdcdata-fnam = p_name.
  wa_bdcdata-fval  = p_value.

  APPEND wa_bdcdata TO ti_bdcdata.


ENDFORM.
*&---------------------------------------------------------------------*
*& Form P_ABRIR_PASTA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM p_abrir_pasta .

  CALL FUNCTION 'BDC_OPEN_GROUP'
    EXPORTING
      client              = sy-mandt
*     DEST                = FILLER8
      group               = 'CARGA_FORNEC'
*     HOLDDATE            = FILLER8
      keep                = 'X'
      user                = sy-uname
*     RECORD              = FILLER1
*     PROG                = SY-CPROG
*     DCPFM               = '%'
*     DATFM               = '%'
* IMPORTING
*     QID                 =
    EXCEPTIONS
      client_invalid      = 1
      destination_invalid = 2
      group_invalid       = 3
      group_is_locked     = 4
      holddate_invalid    = 5
      internal_error      = 6
      queue_error         = 7
      running             = 8
      system_lock_error   = 9
      user_invalid        = 10
      OTHERS              = 11.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*& Form F_INSERIR_BDC
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM f_inserir_bdc .

  CALL FUNCTION 'BDC_INSERT'
    EXPORTING
      tcode            = 'zcad004'
*     POST_LOCAL       = NOVBLOCAL
*     PRINTING         = NOPRINT
*     SIMUBATCH        = ' '
*     CTUPARAMS        = ' '
    TABLES
      dynprotab        = ti_bdcdata
    EXCEPTIONS
      internal_error   = 1
      not_open         = 2
      queue_error      = 3
      tcode_invalid    = 4
      printing_invalid = 5
      posting_invalid  = 6
      OTHERS           = 7.
  IF sy-subrc <> 0.
MESSAGE TEXT-001 TYPE 'I'. "Erro ao abrir a pasta.Implement suitable error handling here

  ENDIF.
  REFRESH ti_bdcdata.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form F_FECHAR_PASTA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM f_fechar_pasta .

  CALL FUNCTION 'BDC_CLOSE_GROUP'
    EXCEPTIONS
      not_open    = 1
      queue_error = 2
      OTHERS      = 3.
  IF sy-subrc <> 0.
  MESSAGE text-002 type 'E'. "Erro na execução do processo.
  ENDIF.
  MESSAGE text-003 TYPE 'I'. "Batch Input realizado com sucesso.


ENDFORM.