*&---------------------------------------------------------------------*
*& Report ZR0019
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZR0019 MESSAGE-ID ZCM0001 NO STANDARD PAGE HEADING.



*======================================================================*
* TABLES                                                               *
*======================================================================*



*======================================================================*
* DECLARAÇÃO DE TIPOS                                                  *
* (TY_...)
*======================================================================*
TYPES: BEGIN OF TY_FILE,
         FORNE LIKE ZT0004-FORNE,
         DENOM LIKE ZT0004-DENOM,
         ENDER LIKE ZT0004-ENDER,
         TELEF LIKE ZT0004-TELEF,
         EMAIL LIKE ZT0004-EMAIL,
         CNPJ  LIKE ZT0004-CNPJ,
       END OF TY_FILE.

*======================================================================*
* DECLARAÇÃO DE TABELAS INTERNAS                                       *
*   TABELA INTERNA GLOBAL   (T_...)                                    *
*   TABELA INTERNA LOCAL    (LT_..)                                    *
*======================================================================*
DATA: TI_FILE    TYPE STANDARD TABLE OF TY_FILE.
DATA: TI_BDCDATA TYPE STANDARD TABLE OF BDCDATA. "BDC é structure de mapeamento para o BatchInput e
"Call Transaction. (PROGRAM, DYNPRO, DYNBEGIN, FNAM, FVAL)
DATA: TI_MESSAGE TYPE STANDARD TABLE OF BDCMSGCOLL. "BDCMSGCOLL é a structure para armazenar os logs de erro no Call Transaction.


*======================================================================*
* DECLARAÇÃO DE WORK AREA                                              *
*   WORK AREAS GLOBAIS     (WA...)                                     *
*   WORK AREAS LOCAIS      (LWA..)                                     *
*======================================================================*
DATA: WA_FILE    TYPE TY_FILE.
DATA: WA_BDCDATA TYPE BDCDATA.
DATA: WA_MESSAGE TYPE BDCMSGCOLL.
*======================================================================*
* DECLARAÇÃO DE CONSTANTES                                             *
* Global (C_...)                                                       *
* Local  (LC_...)                                                      *
*======================================================================*

*======================================================================*
* DECLARAÇÃO DE VARIÁVEIS                                              *
*   VARIÁVEIS GLOBAIS       (V_...)                                    *
*   VARIÁVEIS LOCAIS        (L_...)                                    *
*======================================================================*
DATA: P_MODE TYPE C.

*======================================================================*
* DECLARAÇÃO DE RANGES                                                 *
*   RANGES GLOBAIS          (R_...)                                    *
*   RANGES LOCAIS           (LR_..)                                    *
*======================================================================*

*======================================================================*
* DECLARAÇÃO DE FIELD SYMBOLS                                          *
*   FIELD-SYMBOLS GLOBAIS  (<FS_...>)                                  *
*   FIELD-SYMBOLS LOCAIS   (<LFS_..>)                                  *
*======================================================================*

*======================================================================*
* PARÂMETROS DE TELA:                                                  *
*   SELECT OPTIONS (S_...)                                             *
*   PARAMETERS     (P_...)                                             *
*   CHECKBOX       (CB_...)                                            *
*   RADIOBUTTON    (RB_...)                                            *
*======================================================================*

*Tela de seleção
PARAMETERS: P_FILE  TYPE LOCALFILE DEFAULT'E:\Google Drive\SAP\Academia SAP - Udemy\Carga-call-transaction-01.txt',
*            P_MODE TYPE C DEFAULT 'A'.
            P_MODE1 RADIOBUTTON GROUP G1,
            P_MODE2 RADIOBUTTON GROUP G1.



AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_FILE.

  PERFORM F_SELECIONAR_ARQUIVO.

*======================================================================*
*/ Initialization
*======================================================================*



*======================================================================*
* START-OF-SELECTION
*======================================================================*
 START-OF-SELECTION.

  IF P_MODE1 = 'X'.
    P_MODE = 'A'.
  ELSEIF P_MODE2 = 'X'.
    P_MODE = 'N'.
  ENDIF.

  PERFORM F_UPLOAD_FILE.
  PERFORM F_MONTAR_BCD.

*======================================================================*
* END-OF-SELECTION
*======================================================================*
*&---------------------------------------------------------------------*
*& Form F_SELECIONAR_ARQUIVO
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM F_SELECIONAR_ARQUIVO .

  CALL FUNCTION 'KD_GET_FILENAME_ON_F4'
    EXPORTING
*     PROGRAM_NAME        = SYST-REPID
*     DYNPRO_NUMBER       = SYST-DYNNR
      FIELD_NAME = P_FILE
*     STATIC     = ' '
*     MASK       = ' '
*     FILEOPERATION       = 'R'
*     PATH       =
    CHANGING
      FILE_NAME  = P_FILE
*     LOCATION_FLAG       = 'P'
*   EXCEPTIONS
*     MASK_TOO_LONG       = 1
*     OTHERS     = 2
    .
  IF SY-SUBRC <> 0.
* Implement suitable error handling here
  ELSE.
    MESSAGE S001. "Arquivo selecionado.
  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*& Form F_UPLOAD_FILE
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM F_UPLOAD_FILE .
  DATA: VL_FILENAME TYPE STRING. "Foi necessário declarar essa variável porque o elemento de dados do FILENAME é string que por sua fez o P_FILE (LOCALFILE)
  "É um char.

  VL_FILENAME = P_FILE.

  CALL FUNCTION 'GUI_UPLOAD'
    EXPORTING
      FILENAME                = VL_FILENAME
      FILETYPE                = 'ASC'
*     HAS_FIELD_SEPARATOR     = ' '
*     HEADER_LENGTH           = 0
*     READ_BY_LINE            = 'X'
*     DAT_MODE                = ' '
*     CODEPAGE                = ' '
*     IGNORE_CERR             = ABAP_TRUE
*     REPLACEMENT             = '#'
*     CHECK_BOM               = ' '
*     VIRUS_SCAN_PROFILE      =
*     NO_AUTH_CHECK           = ' '
* IMPORTING
*     FILELENGTH              =
*     HEADER                  =
    TABLES
      DATA_TAB                = TI_FILE
* CHANGING
*     ISSCANPERFORMED         = ' '
    EXCEPTIONS
      FILE_OPEN_ERROR         = 1
      FILE_READ_ERROR         = 2
      NO_BATCH                = 3
      GUI_REFUSE_FILETRANSFER = 4
      INVALID_TYPE            = 5
      NO_AUTHORITY            = 6
      UNKNOWN_ERROR           = 7
      BAD_DATA_FORMAT         = 8
      HEADER_NOT_ALLOWED      = 9
      SEPARATOR_NOT_ALLOWED   = 10
      HEADER_TOO_LONG         = 11
      UNKNOWN_DP_ERROR        = 12
      ACCESS_DENIED           = 13
      DP_OUT_OF_MEMORY        = 14
      DISK_FULL               = 15
      DP_TIMEOUT              = 16
      OTHERS                  = 17.
  IF SY-SUBRC <> 0.
    MESSAGE I000. "Erro no upload do arquivo.
  ELSE.
    MESSAGE S002. "Upload do arquivo realizado com sucesso.
  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*& Form F_MONTAR_BCD
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM F_MONTAR_BCD.

  LOOP AT TI_FILE INTO WA_FILE.

    PERFORM F_MONTAR_TELA USING   'SAPLZTABELAS' '0004' 'X'.

    PERFORM F_MONTAR_DADOS USING  'BDC_CURSOR'   'ZT0004-DENOM(01)'.
    PERFORM F_MONTAR_DADOS USING  'BDC_OKCODE'   '=NEWL'.

    PERFORM F_MONTAR_TELA USING   'SAPLZTABELAS' '0005' 'X'.

    PERFORM F_MONTAR_DADOS USING  'BDC_CURSOR'   'ZT0004-CNPJ'.
    PERFORM F_MONTAR_DADOS USING  'BDC_OKCODE'   '=SAVE'.
    PERFORM F_MONTAR_DADOS USING  'ZT0004-FORNE' WA_FILE-FORNE.
    PERFORM F_MONTAR_DADOS USING  'ZT0004-DENOM' WA_FILE-DENOM.
    PERFORM F_MONTAR_DADOS USING  'ZT0004-ENDER' WA_FILE-ENDER.
    PERFORM F_MONTAR_DADOS USING  'ZT0004-TELEF' WA_FILE-TELEF.
    PERFORM F_MONTAR_DADOS USING  'ZT0004-EMAIL' WA_FILE-EMAIL.
    PERFORM F_MONTAR_DADOS USING  'ZT0004-CNPJ'  WA_FILE-CNPJ.

    PERFORM F_MONTAR_TELA USING   'SAPLZTABELAS' '0005' 'X'.

    PERFORM F_MONTAR_DADOS USING  'BDC_CURSOR'   'ZT0004-DENOM'.
    PERFORM F_MONTAR_DADOS USING  'BDC_OKCODE'   '=ENDE'.

    CALL TRANSACTION 'ZCAD004' "Executando a transação através do Call Transaction
      USING TI_BDCDATA
      MODE P_MODE "Opção similar a que aparece no BatchInput pergutando se quer acompanhar o processamento da transação passo a pass ou em background.
      UPDATE 'A'"Determina se o processamento será sincromo ou assíncromo.
      MESSAGES INTO TI_MESSAGE. "Onde será armazenado os logs de erros do processamento do Call Transaction.

    PERFORM F_IMPRIME_MESSAGE.

    CLEAR: TI_BDCDATA[], WA_BDCDATA, TI_MESSAGE[].

  ENDLOOP.



ENDFORM.
*&---------------------------------------------------------------------*
*& Form F_MONTAR_TELA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> P_
*&      --> P_
*&---------------------------------------------------------------------*
FORM F_MONTAR_TELA USING P_PROGRAM P_SCREEN P_START.

  CLEAR WA_BDCDATA.

  WA_BDCDATA-PROGRAM = P_PROGRAM.
  WA_BDCDATA-DYNPRO = P_SCREEN.
  WA_BDCDATA-DYNBEGIN = P_START.

  APPEND WA_BDCDATA TO TI_BDCDATA.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form F_MONTAR_BDC
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> P_
*&      --> P_
*&---------------------------------------------------------------------*
FORM F_MONTAR_DADOS USING P_FIELNAME P_FIELVALUE.

  CLEAR WA_BDCDATA.

  WA_BDCDATA-FNAM = P_FIELNAME.
  WA_BDCDATA-FVAL = P_FIELVALUE.

  APPEND WA_BDCDATA TO TI_BDCDATA.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form F_IMPRIME_MESSAGE
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM F_IMPRIME_MESSAGE.

  DATA: VL_ID         TYPE BAPIRET2-ID,
        VL_NUMBER     TYPE BAPIRET2-NUMBER,
        VL_MESSAGE_V1 TYPE BAPIRET2-MESSAGE_V1,
        VL_MESSAGE_V2 TYPE BAPIRET2-MESSAGE_V2,
        VL_MESSAGE_V3 TYPE BAPIRET2-MESSAGE_V3,
        VL_MESSAGE_V4 TYPE BAPIRET2-MESSAGE_V4,
        VL_MESSAGE    TYPE BAPIRET2-MESSAGE.

  LOOP AT TI_MESSAGE INTO WA_MESSAGE WHERE MSGTYP = 'E' OR MSGTYP = 'S'.

    VL_ID         = WA_MESSAGE-MSGID.
    VL_NUMBER     = WA_MESSAGE-MSGNR.
    VL_MESSAGE_V1 = WA_MESSAGE-MSGV1.
    VL_MESSAGE_V2 = WA_MESSAGE-MSGV2.
    VL_MESSAGE_V3 = WA_MESSAGE-MSGV3.
    VL_MESSAGE_V4 = WA_MESSAGE-MSGV4.

    CALL FUNCTION 'BAPI_MESSAGE_GETDETAIL'
      EXPORTING
        ID         = VL_ID
        NUMBER     = VL_NUMBER
*       LANGUAGE   = SY-LANGU
        TEXTFORMAT = 'ASC'
*       LINKPATTERN        =
        MESSAGE_V1 = VL_MESSAGE_V1
        MESSAGE_V2 = VL_MESSAGE_V2
        MESSAGE_V3 = VL_MESSAGE_V3
        MESSAGE_V4 = VL_MESSAGE_V4
      IMPORTING
        MESSAGE    = VL_MESSAGE.

    WRITE: VL_MESSAGE.
  ENDLOOP.

ENDFORM.